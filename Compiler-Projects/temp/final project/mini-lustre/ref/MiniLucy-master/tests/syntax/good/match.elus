type direction = Left + Right;

let node match_ex (x : direction) = (o1 : int, o2 : int)
  with cpt : int where
  match x with
    | Left -> let cpt = 1 -> last o1 + 1 in o1 = 2 * cpt
    | Right -> o2 = 1 -> pre o2 + 1; o1 = 0
tel
